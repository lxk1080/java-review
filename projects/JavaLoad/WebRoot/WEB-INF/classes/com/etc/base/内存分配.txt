
1、栈区（stack）—   .连续的内存区域，由编译器自动分配释放，存放函数的参数值，局部变量的值等。其存储数据的方式源于数据结构中的栈的思想
				.栈地址向下扩展，所以栈的容量是在编译时就预先规定好的，大约1~2M
				.由系统自动分配（所以基本数据类型的大小都是固定的），速度较快，但程序员无法控制  

2、堆区（heap）   —   .不连续的内存区域，一般由程序员分配释放，若程序员不释放，程序结束时可能由GC回 收，它与数据结构中的堆是两回事，分配方式类似于链表（这是由于系统是用链表来存储的空闲内存地址的）
				.链表的遍历方向是由低地址向高地址。（堆的大小受限于计算机系统中有效的虚拟内存）
				.一般速度比较慢，而且容易产生内存碎片，但是自由度大，操作复杂，程序员可控制（例如创建数组时指明数组的长度）
 
3、全局区（静态区）（static） - 全局变量和静态变量的存储是放在一块的，初始化的全局变量和静态变量在一块区域， 未初始化的全局变量和未初始化的静态变量在相邻的另 一块区域， 程序结束后由系统释放 
  
4、常量池   — 常量字符串的存放区域，程序结束后由系统释放  
  
5、程序代码区（方法区） - 存放函数体的二进制代码。

  注意：  数据结构里面的堆只是一种数据结构，用在排序和OS任务优先级调度，数据结构中的堆是倒二叉树结构（存储时向高地址扩展），内存中的堆是一个数据存储区，结构类似于链表
  	  不过内存中的栈倒是与数据结构中的栈类似。
  	  
  生活实例： 去饭店吃饭